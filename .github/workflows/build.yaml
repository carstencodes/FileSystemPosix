name: Build

on:
  push:
    branches: [ main, staging, development ]
  pull_request:
    branches: [ main, staging, development ]

env:
  CARGO_TERM_COLOR: always

jobs:
  determine-version:
    runs-on: ubuntu-16.04
    outputs:
      version: ${{ steps.getcargoversion.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: getcargoversion
        run: echo "::set-output name=version::"$(grep -i Version rs/Cargo.toml | cut -d= -f2 | tr -d '[ "]').$GITHUB_RUN_NUMBER

  rust-linux:
    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v2
    - name: Build shared-object
      run: cargo build --verbose --release
      working-directory: rs
    - name: Run tests
      run: cargo test --verbose --release
      working-directory: rs
    - name: Upload shared object as artifact
      uses: actions/upload-artifact@v2
      with:
        name: shared-object
        path: rs/target/release/libposix_permissions.so
        retention-days: 1

  rust-macos:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
    - name: Build dylib
      run: cargo build --verbose --release
      working-directory: rs
    - name: Run tests
      run: cargo test --verbose --release
      working-directory: rs
    - name: Upload dylib as artifact
      uses: actions/upload-artifact@v2
      with:
        name: dylib
        path: rs/target/release/libposix_permissions.dylib
        retention-days: 1

  dotnet-core:
    runs-on: ubuntu-16.04
    needs: [rust-linux, rust-macos, determine-version]
    env:
      project_version: ${{ needs.determine-version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.404
    - name: Install dependencies
      run: dotnet restore
    - name: Print determined-version
      run: echo Building version $project_version
    - name: Build solution
      run: dotnet build --configuration Release --no-restore -property:Version=$project_version
    - name: Test solution
      run: dotnet test --no-restore --verbosity normal
    - name: Fetch dylib Artifacts
      uses: actions/download-artifact@v2
      with:
        name: dylib 
        path: rs/target/release
    - name: Fetch so Artifacts
      uses: actions/download-artifact@v2
      with:
        name: shared-object 
        path: rs/target/release
    - name: Pack NuGet Package
      run: dotnet pack --configuration Release -property:Version=$project_version
    - name: Upload NuGetPackage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: csharp/pack/Release/Posix.FileSystem.Permissions.$project_version.nupkg
    - name: Upload Symbol NuGetPackage as artifact
      uses: actions/upload-artifact@v2
      with:
        name: snupkg
        path: csharp/pack/Release/Posix.FileSystem.Permissions.$project_version.snupkg
      
