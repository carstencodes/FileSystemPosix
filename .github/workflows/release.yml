on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Generate changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  build:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [ changelog, dotnet-core ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          changelog: ${{ needs.changelog.outputs.changelog }}
          branch: ${{ steps.extract_branch.outputs.branch }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: $changelog
          draft: false
          prerelease: ${{ '$branch' != 'main' }}
      - name: Create artifact output-path
        shell: bash
        run: mkdir -p artifacts
      - name: Fetch so Artifacts
        uses: actions/download-artifact@v2
        with:
          name: nupkg
          path: artifacts
      - name: Fetch so Artifacts
        uses: actions/download-artifact@v2
        with:
          name: snupkg
          path: artifacts
      - name: Upload NuGet package
        id: upload-nuget-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: arifacts/Posix.FileSystem.Permissions.*.nupkg
          asset_name: Posix.FileSystem.Permissions.nupkg
          asset_content_type: application/octet-stream
      - name: Upload Symbol NuGet package
        id: upload-symbol-nuget-package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: arifacts/Posix.FileSystem.Permissions.*.snupkg
          asset_name: Posix.FileSystem.Permissions.snupkg
          asset_content_type: application/octet-stream